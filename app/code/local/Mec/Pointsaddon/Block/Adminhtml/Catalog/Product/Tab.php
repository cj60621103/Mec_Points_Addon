<?phpclass Mec_Pointsaddon_Block_Adminhtml_Catalog_Product_Tab extends Mage_Adminhtml_Block_Templateimplements Mage_Adminhtml_Block_Widget_Tab_Interface {	public function _construct()    {        parent::_construct();                 $this->setTemplate('mec/pointsaddon/catalog/product/tab/points_set.phtml');    }     	 public function getTabLabel()    {        return $this->__('Points Set');    }			public function getTabTitle()    {        return $this->__('Points Set');    }			public function canShowTab()    {        return true;    }		public function isHidden()    {        return false;    }			protected $_customerGroups;		protected function _getInitialCustomerGroups()    {        return array();    }		public function getCustomerGroups($groupId = null)    {        if ($this->_customerGroups === null) {            if (!Mage::helper('catalog')->isModuleEnabled('Mage_Customer')) {                return array();            }            $collection = Mage::getModel('customer/group')->getCollection();            $this->_customerGroups = $this->_getInitialCustomerGroups();            foreach ($collection as $item) {                /** @var $item Mage_Customer_Model_Group */                $this->_customerGroups[$item->getId()] = $item->getCustomerGroupCode();            }        }        if ($groupId !== null) {            return isset($this->_customerGroups[$groupId]) ? $this->_customerGroups[$groupId] : array();        }        return $this->_customerGroups;    }		protected $_websites;			public function getWebsites()    {        if (!is_null($this->_websites)) {            return $this->_websites;        }        $this->_websites = array(            0 => array(                'name' => Mage::helper('catalog')->__('All Websites'),                'currency' => Mage::app()->getBaseCurrencyCode()            )        );        		$websites = Mage::app()->getWebsites(false);		$productWebsiteIds  = $this->getProduct()->getWebsiteIds();		foreach ($websites as $website) {			/** @var $website Mage_Core_Model_Website */			if (!in_array($website->getId(), $productWebsiteIds)) {				continue;			}			$this->_websites[$website->getId()] = array(				'name' => $website->getName(),				'currency' => $website->getBaseCurrencyCode()			);		}                return $this->_websites;    }		public function getProduct()    {        return Mage::registry('product');    }		public function getDefaultCustomerGroup()    {        return Mage_Customer_Model_Group::CUST_GROUP_ALL;    }			public function getValues()	{		$product = $this->getProduct();		$collection = Mage::getModel('pointsaddon/pointset')->getCollection()					  ->addFieldToFilter('product_id', array('eq' => $product->getId()));						return $collection;	}						} 